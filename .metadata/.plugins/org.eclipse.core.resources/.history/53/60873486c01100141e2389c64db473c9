package com.example.music;

import java.io.IOException;

import android.app.Service;
import android.content.ContentUris;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnPreparedListener;
import android.media.TimedText;
import android.net.Uri;
import android.os.Binder;
import android.os.IBinder;
import android.os.PowerManager;
import android.provider.MediaStore;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;

public class Player extends Service implements OnPreparedListener,MediaPlayer.OnCompletionListener,MediaPlayer.OnErrorListener
,MediaPlayer.OnSeekCompleteListener{

	 private final IBinder mBinder = new LocalBinder();
	 private Cursor list;
	 private int current=0;
	@Override
	public IBinder onBind(Intent arg0) {
		// TODO Auto-generated method stub
		mplayer=new MediaPlayer();
		mplayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
		mplayer.setOnPreparedListener(this);
		mplayer.setOnCompletionListener(this);
		mplayer.setOnErrorListener(this);
		mplayer.setOnSeekCompleteListener(this);
		mplayer.setWakeMode(getApplicationContext(), PowerManager.PARTIAL_WAKE_LOCK);
		return mBinder;
	}
	MediaPlayer mplayer;
	 @Override
	    public int onStartCommand(Intent intent, int flags, int startId) {
	 
		 return super.onStartCommand(intent,flags,startId);
	 }
	 
	 
	@Override
	public void onPrepared(MediaPlayer arg0) {
		// TODO Auto-generated method stub
		arg0.start();
		
	}
	@Override
	public void onCompletion(MediaPlayer mp) {
		// TODO Auto-generated method stub
		if(current<list.getColumnCount())
		{
			current++;
			MainActivity m=(MainActivity)getApplicationContext();
		
			ImageButton but=(ImageButton)m.findViewById(R.id.btnPlay);
			but.setImageResource(R.drawable.pause_button);
			ImageView im=(ImageView)m.findViewById(R.id.song_art);
			String s=firstfragment.song_uri[current];
			if(s!=null)
			{
				Bitmap bitmap;
				BitmapFactory.Options option = new BitmapFactory.Options();
				bitmap=BitmapFactory.decodeFile(s, option);
				Bitmap bit=Bitmap.createScaledBitmap(bitmap, 56,56,false);
				im.setImageBitmap(bit);
			}
			else
			{
				im.setImageResource(R.drawable.icon_tumblr);
			}
			
			TextView tv=(TextView)m.findViewById(R.id.song_name);
			tv.setText(firstfragment.song_name[current]);
			startit(list,current);
		}
		
	}
	@Override
	public boolean onError(MediaPlayer mp, int what, int extra) {
		// TODO Auto-generated method stub
		return false;
	}
	
	@Override
	public void onSeekComplete(MediaPlayer mp) {
		// TODO Auto-generated method stub
		
	}
	public class LocalBinder extends Binder {
        Player getService() {
            // Return this instance of LocalService so clients can call public methods
            return Player.this;
        }
    }
	public void startit(Cursor cursor,int position)
	{	Uri contentUri;
		if(cursor!=null)
		{
				if(cursor.moveToFirst())
				{
						int index = cursor.getColumnIndex(MediaStore.Audio.Media._ID);
						
						
							list=cursor;
						
						list.moveToPosition(position);
						long thisId = list.getLong(index);
						
						contentUri = ContentUris.withAppendedId(
						        android.provider.MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, thisId);
						
						
							
						mplayer.reset();
						if(contentUri!=null)
						{
							try {
								mplayer.setDataSource(getApplicationContext(), contentUri);
								mplayer.prepareAsync();
							} catch (IllegalArgumentException
									| SecurityException | IllegalStateException
									| IOException e) {
								// TODO Auto-generated catch block
								//e.printStackTrace();
							}
							
						}
				}
		}
	
	}
	public void onDestroy()
	{
		mplayer.release();
	}
}
